package org.companyLog.dao;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;
import org.companyLog.bean.Log;
import org.companyLog.bean.Report;
import org.companyLog.bean.ReportShower;
import org.companyLog.provider.SqlSelectProvider;

public interface ReportMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report
     *
     * @mbggenerated Wed Mar 15 22:23:04 CST 2017
     */
    @Delete({
        "delete from report",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report
     *
     * @mbggenerated Wed Mar 15 22:23:04 CST 2017
     */
    @Insert({
        "insert into report (id, author_id, ",
        "receiver_id, begin_date, ",
        "end_date, work_contet, ",
        "work_summary, self_evaluation, ",
        "leader_evaluation, submit_time, ",
        "update_time, state)",
        "values (#{id,jdbcType=VARCHAR}, #{authorId,jdbcType=VARCHAR}, ",
        "#{receiverId,jdbcType=VARCHAR}, #{beginDate,jdbcType=TIMESTAMP}, ",
        "#{endDate,jdbcType=TIMESTAMP}, #{workContet,jdbcType=VARCHAR}, ",
        "#{workSummary,jdbcType=VARCHAR}, #{selfEvaluation,jdbcType=VARCHAR}, ",
        "#{leaderEvaluation,jdbcType=VARCHAR}, #{submitTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER})"
    })
    int insert(Report record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report
     *
     * @mbggenerated Wed Mar 15 22:23:04 CST 2017
     */
    @Select({
        "select",
        "r.id, author_id, receiver_id, begin_date, end_date, work_contet, work_summary, ",
        "self_evaluation, leader_evaluation, submit_time, update_time, state",
        ",u1.nickname as authorName,u2.nickname as receiverName",
        "from report r",
        ",user u1,user u2",
        "where r.id = #{id,jdbcType=VARCHAR}",
        "and u1.id = author_id and u2.id = receiver_id"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="author_id", property="authorId", jdbcType=JdbcType.VARCHAR),
        @Result(column="receiver_id", property="receiverId", jdbcType=JdbcType.VARCHAR),
        @Result(column="begin_date", property="beginDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="end_date", property="endDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="work_contet", property="workContet", jdbcType=JdbcType.VARCHAR),
        @Result(column="work_summary", property="workSummary", jdbcType=JdbcType.VARCHAR),
        @Result(column="self_evaluation", property="selfEvaluation", jdbcType=JdbcType.VARCHAR),
        @Result(column="leader_evaluation", property="leaderEvaluation", jdbcType=JdbcType.VARCHAR),
        @Result(column="submit_time", property="submitTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="state", property="state", jdbcType=JdbcType.INTEGER),
        
        @Result(column="authorName", property="authorName", jdbcType=JdbcType.VARCHAR),
        @Result(column="receiverName", property="receiverName", jdbcType=JdbcType.VARCHAR),
    })
    Report selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report
     *
     * @mbggenerated Wed Mar 15 22:23:04 CST 2017
     */
    @Select({
        "select",
        "id, author_id, receiver_id, begin_date, end_date, work_contet, work_summary, ",
        "self_evaluation, leader_evaluation, submit_time, update_time, state",
        "from report"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="author_id", property="authorId", jdbcType=JdbcType.VARCHAR),
        @Result(column="receiver_id", property="receiverId", jdbcType=JdbcType.VARCHAR),
        @Result(column="begin_date", property="beginDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="end_date", property="endDate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="work_contet", property="workContet", jdbcType=JdbcType.VARCHAR),
        @Result(column="work_summary", property="workSummary", jdbcType=JdbcType.VARCHAR),
        @Result(column="self_evaluation", property="selfEvaluation", jdbcType=JdbcType.VARCHAR),
        @Result(column="leader_evaluation", property="leaderEvaluation", jdbcType=JdbcType.VARCHAR),
        @Result(column="submit_time", property="submitTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="state", property="state", jdbcType=JdbcType.INTEGER)
    })
    List<Report> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table report
     *
     * @mbggenerated Wed Mar 15 22:23:04 CST 2017
     */
    @Update({
        "update report",
        "set author_id = ifnull(#{authorId,jdbcType=VARCHAR},author_id),",
          "receiver_id = ifnull(#{receiverId,jdbcType=VARCHAR},receiver_id),",
          "begin_date = ifnull(#{beginDate,jdbcType=TIMESTAMP},begin_date),",
          "end_date = ifnull(#{endDate,jdbcType=TIMESTAMP},end_date),",
          "work_contet = ifnull(#{workContet,jdbcType=VARCHAR},work_contet),",
          "work_summary = ifnull(#{workSummary,jdbcType=VARCHAR},work_summary),",
          "self_evaluation = ifnull(#{selfEvaluation,jdbcType=VARCHAR},self_evaluation),",
          "leader_evaluation = ifnull(#{leaderEvaluation,jdbcType=VARCHAR},leader_evaluation),",
          "submit_time = ifnull(#{submitTime,jdbcType=TIMESTAMP},submit_time),",
          "update_time = ifnull(#{updateTime,jdbcType=TIMESTAMP},update_time),",
          "state = ifnull(#{state,jdbcType=INTEGER},state)",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Report record);
    
    
    //自定义
    @Select({
        "select",
        "r.id, author_id, receiver_id, begin_date, end_date, work_contet, work_summary, ",
        "self_evaluation, leader_evaluation, submit_time, update_time, state",
        ",u.nickname as authorName",
        "from report r,user u",
        "where receiver_id = #{receiverId,jdbcType=VARCHAR}",
        "and u.id= r.author_id"
    })
    @Results({
    	  @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
          @Result(column="author_id", property="authorId", jdbcType=JdbcType.VARCHAR),
          @Result(column="receiver_id", property="receiverId", jdbcType=JdbcType.VARCHAR),
          @Result(column="begin_date", property="beginDate", jdbcType=JdbcType.TIMESTAMP),
          @Result(column="end_date", property="endDate", jdbcType=JdbcType.TIMESTAMP),
          @Result(column="work_contet", property="workContet", jdbcType=JdbcType.VARCHAR),
          @Result(column="work_summary", property="workSummary", jdbcType=JdbcType.VARCHAR),
          @Result(column="self_evaluation", property="selfEvaluation", jdbcType=JdbcType.VARCHAR),
          @Result(column="leader_evaluation", property="leaderEvaluation", jdbcType=JdbcType.VARCHAR),
          @Result(column="submit_time", property="submitTime", jdbcType=JdbcType.TIMESTAMP),
          @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
          @Result(column="state", property="state", jdbcType=JdbcType.INTEGER),
        
        @Result(column="authorName", property="authorName", jdbcType=JdbcType.VARCHAR)
    })
    List<Report> selectByReceiver(String receiverId);
    
    
    
    //TODO SQL构造器查询 列表 
  @SelectProvider(type = SqlSelectProvider.class, method = "select")
  @Results({
	  @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
      @Result(column="author_id", property="authorId", jdbcType=JdbcType.VARCHAR),
      @Result(column="receiver_id", property="receiverId", jdbcType=JdbcType.VARCHAR),
      @Result(column="begin_date", property="beginDate", jdbcType=JdbcType.TIMESTAMP),
      @Result(column="end_date", property="endDate", jdbcType=JdbcType.TIMESTAMP),
      @Result(column="work_contet", property="workContet", jdbcType=JdbcType.VARCHAR),
      @Result(column="work_summary", property="workSummary", jdbcType=JdbcType.VARCHAR),
      @Result(column="self_evaluation", property="selfEvaluation", jdbcType=JdbcType.VARCHAR),
      @Result(column="leader_evaluation", property="leaderEvaluation", jdbcType=JdbcType.VARCHAR),
      @Result(column="submit_time", property="submitTime", jdbcType=JdbcType.TIMESTAMP),
      @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
      @Result(column="state", property="state", jdbcType=JdbcType.INTEGER),
    
    @Result(column="authorName", property="authorName", jdbcType=JdbcType.VARCHAR),
    @Result(column="receiverName", property="receiverName", jdbcType=JdbcType.VARCHAR)
})
  /**
   * TODO SQL构造器查询 列表
   * @return
   */
  public List<ReportShower> getReportPage(@Param(value="table")String table,
  		@Param(value="colums")String colums,
  		@Param(value="order")String order,
  		@Param(value="index")String index,
  		@Param(value="rows")String rows,
  		@Param(value="eqCondition")Map<String,String> eqCondition,
  		@Param(value="likeCondition")Map<String,String> likeCondition);
    
  	//SQL构造器查询 总数
    @SelectProvider(type = SqlSelectProvider.class, method = "selectCount")
    public int getReportCount(@Param(value="table")String table,
    		@Param(value="eqCondition")Map<String,String> eqCondition,
    		@Param(value="likeCondition")Map<String,String> likeCondition);
    

    
    
    //根据发起者查询汇报
//    @Select({
//        "select",
//        "r.id, author_id, receiver_id, begin_date, end_date, work_contet, work_summary, ",
//        "self_evaluation, leader_evaluation, submit_time, update_time, state",
//        ",u1.nickname as authorName,u2.nickname as receiverName",
//        "from report r,user u1,user u2",
//        "where author_id = #{authorId,jdbcType=VARCHAR}",
//        "and u1.id= r.author_id",
//        "and u2.id= r.receiver_id"
//    })
//    @Results({
//    	  @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
//          @Result(column="author_id", property="authorId", jdbcType=JdbcType.VARCHAR),
//          @Result(column="receiver_id", property="receiverId", jdbcType=JdbcType.VARCHAR),
//          @Result(column="begin_date", property="beginDate", jdbcType=JdbcType.TIMESTAMP),
//          @Result(column="end_date", property="endDate", jdbcType=JdbcType.TIMESTAMP),
//          @Result(column="work_contet", property="workContet", jdbcType=JdbcType.VARCHAR),
//          @Result(column="work_summary", property="workSummary", jdbcType=JdbcType.VARCHAR),
//          @Result(column="self_evaluation", property="selfEvaluation", jdbcType=JdbcType.VARCHAR),
//          @Result(column="leader_evaluation", property="leaderEvaluation", jdbcType=JdbcType.VARCHAR),
//          @Result(column="submit_time", property="submitTime", jdbcType=JdbcType.TIMESTAMP),
//          @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
//          @Result(column="state", property="state", jdbcType=JdbcType.INTEGER),
//        
//        @Result(column="authorName", property="authorName", jdbcType=JdbcType.VARCHAR),
//        @Result(column="receiverName", property="receiverName", jdbcType=JdbcType.VARCHAR)
//    })
//    List<ReportShower> selectByAuthor(String authorId);
    
}