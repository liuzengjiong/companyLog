package org.companyLog.dao;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;
import org.companyLog.bean.LogLimitRole;

public interface LogLimitRoleMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table log_limit_role
     *
     * @mbggenerated Sat Mar 18 20:20:25 CST 2017
     */
    @Delete({
        "delete from log_limit_role",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table log_limit_role
     *
     * @mbggenerated Sat Mar 18 20:20:25 CST 2017
     */
    @Insert({
        "insert into log_limit_role (id, log_id, ",
        "role_id)",
        "values (#{id,jdbcType=VARCHAR}, #{logId,jdbcType=VARCHAR}, ",
        "#{roleId,jdbcType=VARCHAR})"
    })
    int insert(LogLimitRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table log_limit_role
     *
     * @mbggenerated Sat Mar 18 20:20:25 CST 2017
     */
    @Select({
        "select",
        "id, log_id, role_id",
        "from log_limit_role",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="log_id", property="logId", jdbcType=JdbcType.VARCHAR),
        @Result(column="role_id", property="roleId", jdbcType=JdbcType.VARCHAR)
    })
    LogLimitRole selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table log_limit_role
     *
     * @mbggenerated Sat Mar 18 20:20:25 CST 2017
     */
    @Select({
        "select",
        "id, log_id, role_id",
        "from log_limit_role"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="log_id", property="logId", jdbcType=JdbcType.VARCHAR),
        @Result(column="role_id", property="roleId", jdbcType=JdbcType.VARCHAR)
    })
    List<LogLimitRole> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table log_limit_role
     *
     * @mbggenerated Sat Mar 18 20:20:25 CST 2017
     */
    @Update({
        "update log_limit_role",
        "set log_id = #{logId,jdbcType=VARCHAR},",
          "role_id = #{roleId,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(LogLimitRole record);
    
 //自定义
    
    @Delete({
        "delete from log_limit_role",
        "where log_id = #{0,jdbcType=VARCHAR} ",
        "and role_id = #{1,jdbcType=VARCHAR}"
    })
    int deleteByLogIdAndRoleId(String logId,String roleId);
    
    @Delete({
        "delete from log_limit_role",
        "where log_id = #{logId,jdbcType=VARCHAR} ",
    })
    int deleteByLogId(String logId);
    
    @Delete({
        "delete from log_limit_role",
        "where role_id = #{roleId,jdbcType=VARCHAR} ",
    })
    int deleteByRoleId(String roleId);
    
    @Select({
    	"select",
        "id, log_id, role_id",
        "from log_limit_role",
        "where log_id = #{logId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="log_id", property="logId", jdbcType=JdbcType.VARCHAR),
        @Result(column="role_id", property="roleId", jdbcType=JdbcType.VARCHAR)
    })
    List<LogLimitRole> selectByLogId(String logId);
    
}